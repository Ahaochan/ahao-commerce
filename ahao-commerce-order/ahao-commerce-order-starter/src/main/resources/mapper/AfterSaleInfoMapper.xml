<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="moe.ahao.commerce.aftersale.infrastructure.repository.impl.mybatis.mapper.AfterSaleInfoMapper">
    <update id="updateAfterSaleStatusByAfterSaleId">
        update after_sale_info
        set after_sale_status = #{toStatus}
        where after_sale_id = #{afterSaleId}
          and after_sale_status = #{fromStatus}
    </update>
    <update id="updateReviewInfoByAfterSaleId">
        update after_sale_info
        set
        <if test="reviewReason != null">review_reason = #{reviewReason},</if>
        <if test="reviewReasonCode != null">review_reason_code = #{reviewReasonCode},</if>
        <if test="reviewSource != null">review_source = #{reviewSource},</if>
        <if test="reviewTime != null">review_time = #{reviewTime},</if>
        after_sale_status = #{afterSaleStatus}
        where after_sale_id = #{afterSaleId}
    </update>
    <select id="selectListByOrderIdAndAfterSaleTypeDetails" resultType="moe.ahao.commerce.aftersale.infrastructure.repository.impl.mybatis.data.AfterSaleInfoDO">
        select * from after_sale_info
        where order_id = #{orderId} and
        after_sale_type_detail in
        <foreach collection="afterSaleTypeDetails" item="item" open="(" close=")" separator=",">#{item}</foreach>
    </select>
    <select id="selectListByAfterSaleIds" resultType="moe.ahao.commerce.aftersale.infrastructure.repository.impl.mybatis.data.AfterSaleInfoDO">
        select * from after_sale_info
        where after_sale_id in
        <foreach collection="afterSaleIds" item="item" open="(" close=")" separator=",">#{item}</foreach>
    </select>

    <select id="selectOneByAfterSaleId" resultType="moe.ahao.commerce.aftersale.infrastructure.repository.impl.mybatis.data.AfterSaleInfoDO">
        select *
        from after_sale_info
        where after_sale_id = #{afterSaleId}
    </select>
    <select id="selectOneByOrderId" resultType="moe.ahao.commerce.aftersale.infrastructure.repository.impl.mybatis.data.AfterSaleInfoDO">
        select *
        from after_sale_info
        where order_id = #{orderId}
    </select>
    <select id="selectPage" parameterType="moe.ahao.commerce.aftersale.api.query.AfterSalePageQuery"
            resultType="moe.ahao.commerce.aftersale.api.dto.AfterSaleOrderListDTO">
        select a.after_sale_id AS afterSaleId,
        a.business_identifier AS businessIdentifier, a.order_id AS orderId, a.order_type AS orderType, a.user_id AS userId,
        a.after_sale_status AS afterSaleStatus, a.remark AS remark, a.after_sale_type_detail AS afterSaleTypeDetail,
        a.apply_source AS applySource, a.apply_time AS applyTime, a.apply_reason_code AS applyReasonCode, a.apply_reason AS applyReason,
        a.review_time AS reviewTime, a.review_reason_code AS reviewReasonCode, a.review_reason AS reviewReason,
        a.after_sale_type AS afterSaleType,
        item.product_name AS productName, item.sku_code AS skuCode, item.product_img AS productImg,
        item.return_quantity AS returnQuantity, item.origin_amount AS originAmount,
        item.apply_refund_amount AS applyRefundAmount, item.real_refund_amount AS realRefundAmount
        from after_sale_info AS a
        left join after_sale_item AS item ON a.after_sale_id = item.after_sale_id
        left join after_sale_refund AS refund ON a.after_sale_id = refund.after_sale_id
        <where>
            <if test='query.businessIdentifier != null'>
                and a.business_identifier = #{query.businessIdentifier}
            </if>
            <if test='query.orderTypes != null and query.orderTypes.size !=0'>
                and a.order_type in <foreach collection='query.orderTypes' item='item' open='(' close=')' separator=','>#{item}</foreach>
            </if>
            <if test='query.afterSaleStatus != null and query.afterSaleStatus.size !=0'>
                and a.after_sale_status in <foreach collection='query.afterSaleStatus' item='item' open='(' close=')' separator=','>#{item}</foreach>
            </if>
            <if test='query.applySources != null and query.applySources.size !=0'>
                and a.apply_Source in <foreach collection='query.applySources' item='item' open='(' close=')' separator=','>#{item}</foreach>
            </if>
            <if test='query.afterSaleTypes != null and query.afterSaleTypes.size !=0'>
                and a.after_sale_type in <foreach collection='query.afterSaleTypes' item='item' open='(' close=')' separator=','>#{item}</foreach>
            </if>
            <if test='query.afterSaleIds != null and query.afterSaleIds.size !=0'>
                and a.after_sale_id in <foreach collection='query.afterSaleIds' item='item' open='(' close=')' separator=','>#{item}</foreach>
            </if>
            <if test='query.userIds != null and query.userIds.size !=0'>
                and a.user_id in <foreach collection='query.userIds' item='item' open='(' close=')' separator=','>#{item}</foreach>
            </if>
            <if test='query.orderIds != null and query.orderIds.size !=0'>
                and a.order_id in <foreach collection='query.orderIds' item='item' open='(' close=')' separator=','>#{item}</foreach>
            </if>
            <if test='query.skuCodes != null and query.skuCodes.size !=0'>
                and item.sku_code in <foreach collection='query.skuCodes' item='item' open='(' close=')' separator=','>#{item}</foreach>
            </if>
            <if test='query.queryStartCreatedTime != null'>
                and a.create_time >= #{query.queryStartCreatedTime}
            </if>
            <if test='query.queryEndCreatedTime != null'>
                and a.create_time <![CDATA[<=]]> #{query.queryEndCreatedTime}
            </if>
            <if test='query.queryStartApplyTime != null'>
                and a.apply_time >= #{query.queryStartApplyTime}
            </if>
            <if test='query.queryEndApplyTime'>
                and a.apply_time <![CDATA[<=]]> #{query.queryEndApplyTime}
            </if>
            <if test='query.queryStartReviewTime'>
                and a.review_time >= #{query.queryStartReviewTime}
            </if>
            <if test='query.queryEndReviewTime'>
                and a.review_time <![CDATA[<=]]> #{query.queryEndReviewTime}
            </if>
            <if test='query.queryStartRefundPayTime'>
                and refund.refund_pay_time >= #{query.queryStartRefundPayTime}
            </if>
            <if test='query.queryEndRefundPayTime'>
                and refund.refund_pay_time <![CDATA[<=]]> #{query.queryEndRefundPayTime}
            </if>
            <if test='query.queryStartRefundAmount'>
                and refund.refund_amount >= #{query.queryStartRefundAmount}
            </if>
            <if test='query.queryEndRefundAmount'>
                and refund.refund_amount <![CDATA[<=]]> #{query.queryEndRefundAmount}
            </if>
        </where>
        order by a.create_time desc
    </select>
</mapper>
